{
  "contractName": "DogeAttack",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewDoge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomDog",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dogs",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getDogsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_i",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dogId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewDoge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomDog\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dogToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dogs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getDogsByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dogId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_i\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/julian/Desktop/BinanceCriptoDogs/contracts/dogAttack.sol\":\"DogeAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julian/Desktop/BinanceCriptoDogs/contracts/dogAttack.sol\":{\"keccak256\":\"0x2530a64476f19e6da6da934c7a39708dcfaf4bf8c0d4894f071e32b77cdf9832\",\"urls\":[\"bzz-raw://80b10f943f424e15c1b806b37ed21de596ce0f5ee4a55b3752a3a2a1f105b4d8\",\"dweb:/ipfs/QmUxZ2k9rw83qkHUZMZQfP89aJzhqRM5cS79Lr4qkxQsGs\"]},\"/home/julian/Desktop/BinanceCriptoDogs/contracts/dogFactory.sol\":{\"keccak256\":\"0x9627355509e54897a0d82b1c40696f488c3809bf5a3d5326b4b6affacd432d2a\",\"urls\":[\"bzz-raw://94941b054a8a9aa1c123405141526f94ea3889279a9b7adfe3b2e773dc2be046\",\"dweb:/ipfs/QmRRDLcnfZ96PuVZYuUqwTTn5T3k94Je9Nr27P4MhCi8Lj\"]},\"/home/julian/Desktop/BinanceCriptoDogs/contracts/dogFeeding.sol\":{\"keccak256\":\"0xe15735f98349841260a4d9dd1fa8291698b4055cb364971b0efc6de78a9a620c\",\"urls\":[\"bzz-raw://8e5fa2cbda49785afcbdcb7dd5f15378c17edc5a85de6c2684ad2408b6e239d1\",\"dweb:/ipfs/QmdzTMvydjFEampyc6PmWgJtXdNCuRLkzajSAfDNC5k5fn\"]},\"/home/julian/Desktop/BinanceCriptoDogs/contracts/dogHelper.sol\":{\"keccak256\":\"0xb17c9a4c0ce91cd9872b0f5aba6ec9da7533e6820f69122ba9898ee000f4676d\",\"urls\":[\"bzz-raw://a21f641ef5d0d072fd4b2cf3f0771137cd5cce4ef8fde857b34e589526043b90\",\"dweb:/ipfs/QmNUHteqGwJWYckr4euT7mACwHCjX2oRDZEBRajSXhu2rP\"]},\"/home/julian/Desktop/BinanceCriptoDogs/contracts/ownable.sol\":{\"keccak256\":\"0xcd93f65f842297188cf32738da3e390e6a2321e38d49fde25c7b387966fc4d4f\",\"urls\":[\"bzz-raw://8ec5329ca5646c98becb809f8d1a9af2ed191d3741cfa4f6ce7af941265bfd4a\",\"dweb:/ipfs/Qmc8WtrVR5h6MTySMS2G9xVAq1m2rLhT46FZUUG6ZMRvCC\"]},\"/home/julian/Desktop/BinanceCriptoDogs/contracts/safemath.sol\":{\"keccak256\":\"0xf188e1e3a830833b838f6a6951b7daac0f145caebc6b1e59c3013282488c3627\",\"urls\":[\"bzz-raw://7406f269fdfbf02a8ecb345bf77a4d9c62cf139d60d7aa182819ced4e773f0aa\",\"dweb:/ipfs/QmWDshcC3mzDKoBAKjRs6fzDKiLSgiMfwAoiqtTdKpYS15\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c680006009556000600a556046600b55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061197f8061007d6000396000f3fe6080604052600436106100dd5760003560e01c806373eb2ac41161007f578063ccf670f811610059578063ccf670f814610543578063e1fa76381461057e578063f2fde38b146105c3578063f8df049d14610614576100dd565b806373eb2ac4146103e15780638da5cb5b1461045c578063c39cbef1146104b3576100dd565b806338272356116100bb57806338272356146101fb57806351cff8d9146102fa5780635f4623f11461034b5780635faf28801461039c576100dd565b80630ce90ec2146100e257806317a7f4cc1461011057806320ac27c314610155575b600080fd5b61010e600480360360208110156100f857600080fd5b81019080803590602001909291905050506106dc565b005b34801561011c57600080fd5b506101536004803603604081101561013357600080fd5b810190808035906020019092919080359060200190929190505050610744565b005b34801561016157600080fd5b506101a46004803603602081101561017857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610899565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101e75780820151818401526020810190506101cc565b505050509050019250505060405180910390f35b34801561020757600080fd5b506102346004803603602081101561021e57600080fd5b81019080803590602001909291905050506109c6565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156102ba57808201518184015260208101905061029f565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561030657600080fd5b506103496004803603602081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ae3565b005b34801561035757600080fd5b5061039a6004803603602081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b86565b005b3480156103a857600080fd5b506103df600480360360408110156103bf57600080fd5b810190808035906020019092919080359060200190929190505050610c23565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050610cfd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046857600080fd5b50610471610d30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104bf57600080fd5b50610541600480360360408110156104d657600080fd5b8101908080359060200190929190803590602001906401000000008111156104fd57600080fd5b82018360208201111561050f57600080fd5b8035906020019184600183028401116401000000008311171561053157600080fd5b9091929391929390505050610d55565b005b34801561054f57600080fd5b5061057c6004803603602081101561056657600080fd5b8101908080359060200190929190505050610e3b565b005b34801561058a57600080fd5b506105c1600480360360408110156105a157600080fd5b810190808035906020019092919080359060200190929190505050610e9e565b005b3480156105cf57600080fd5b50610612600480360360208110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109d565b005b34801561062057600080fd5b506106da6004803603602081101561063757600080fd5b810190808035906020019064010000000081111561065457600080fd5b82018360208201111561066657600080fd5b8035906020019184600183028401116401000000008311171561068857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ee565b005b60095434146106ea57600080fd5b600581815481106106f757fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156107ba57600080fd5b505afa1580156107ce573d6000803e3d6000fd5b505050506040513d6101408110156107e557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506108948382611264565b505050565b606080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405190808252806020026020018201604052801561090a5781602001602082028038833980820191505090505b509050600080905060008090505b6005805490508110156109bb578473ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109ae578083838151811061099957fe5b60200260200101818152505081806001019250505b8080600101915050610918565b508192505050919050565b600581815481106109d357fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7f5780601f10610a5457610100808354040283529160200191610a7f565b820191906000526020600020905b815481529060010190602001808311610a6257829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b82573d6000803e3d6000fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bdf57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160058281548110610c3457fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610c6757600080fd5b836006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cd357600080fd5b8360058681548110610ce157fe5b9060005260206000209060030201600101819055505050505050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002838160058281548110610d6657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610d9957600080fd5b846006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0557600080fd5b848460058881548110610e1457fe5b90600052602060002090600302016000019190610e329291906117da565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9457600080fd5b8060098190555050565b816006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0a57600080fd5b600060058481548110610f1957fe5b90600052602060002090600302019050600060058481548110610f3857fe5b906000526020600020906003020190506000610f546064611373565b9050600b54811161101d5782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050611018868360010154611264565b611095565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061109483611402565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561113057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461123a57600080fd5b60006112458261142c565b90506064818161125157fe5b068103905061126082826114ba565b5050565b816006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112d057600080fd5b6000600584815481106112df57fe5b906000526020600020906003020190506112f881611797565b61130157600080fd5b600254838161130c57fe5b06925060006002848360010154018161132157fe5b0490506113636040518060400160405280600681526020017f4e6577446f670000000000000000000000000000000000000000000000000000815250826114ba565b61136c82611402565b5050505050565b6000600a60008154809291906001019190505550814233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816113fa57fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080826040516020018082805190602001908083835b602083106114665780518252602082019150602081019050602083039250611443565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c905060025481816114b157fe5b06915050919050565b6114c261185a565b828160000181905250818160200181815250506001816040019063ffffffff16908163ffffffff16815250506003544201816060019063ffffffff16908163ffffffff16815250506000816080019061ffff16908161ffff168152505060008160a0019061ffff16908161ffff16815250506005819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061157c9291906118a4565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff16021790555050506000428360045401019050336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116cd6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117be90919063ffffffff16565b507f602d5f162a3ab956e72d52d29515db38e085449c051f4ba319f4ccff1569b1908185856040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561173e578082015181840152602081019050611723565b50505050905090810190601f16801561176b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a161179060016004546117be90919063ffffffff16565b5050505050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b6000808284019050838110156117d057fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061181b57803560ff1916838001178555611849565b82800160010185558215611849579182015b8281111561184857823582559160200191906001019061182d565b5b5090506118569190611924565b5090565b6040518060c001604052806060815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118e557805160ff1916838001178555611913565b82800160010185558215611913579182015b828111156119125782518255916020019190600101906118f7565b5b5090506119209190611924565b5090565b61194691905b8082111561194257600081600090555060010161192a565b5090565b9056fea264697066735822122093cd967bf094c69b839cf7ef9ecb6d807bcaf16b13af17251b0b3db0e46d246364736f6c63430006000033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c806373eb2ac41161007f578063ccf670f811610059578063ccf670f814610543578063e1fa76381461057e578063f2fde38b146105c3578063f8df049d14610614576100dd565b806373eb2ac4146103e15780638da5cb5b1461045c578063c39cbef1146104b3576100dd565b806338272356116100bb57806338272356146101fb57806351cff8d9146102fa5780635f4623f11461034b5780635faf28801461039c576100dd565b80630ce90ec2146100e257806317a7f4cc1461011057806320ac27c314610155575b600080fd5b61010e600480360360208110156100f857600080fd5b81019080803590602001909291905050506106dc565b005b34801561011c57600080fd5b506101536004803603604081101561013357600080fd5b810190808035906020019092919080359060200190929190505050610744565b005b34801561016157600080fd5b506101a46004803603602081101561017857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610899565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101e75780820151818401526020810190506101cc565b505050509050019250505060405180910390f35b34801561020757600080fd5b506102346004803603602081101561021e57600080fd5b81019080803590602001909291905050506109c6565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156102ba57808201518184015260208101905061029f565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561030657600080fd5b506103496004803603602081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ae3565b005b34801561035757600080fd5b5061039a6004803603602081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b86565b005b3480156103a857600080fd5b506103df600480360360408110156103bf57600080fd5b810190808035906020019092919080359060200190929190505050610c23565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050610cfd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561046857600080fd5b50610471610d30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104bf57600080fd5b50610541600480360360408110156104d657600080fd5b8101908080359060200190929190803590602001906401000000008111156104fd57600080fd5b82018360208201111561050f57600080fd5b8035906020019184600183028401116401000000008311171561053157600080fd5b9091929391929390505050610d55565b005b34801561054f57600080fd5b5061057c6004803603602081101561056657600080fd5b8101908080359060200190929190505050610e3b565b005b34801561058a57600080fd5b506105c1600480360360408110156105a157600080fd5b810190808035906020019092919080359060200190929190505050610e9e565b005b3480156105cf57600080fd5b50610612600480360360208110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061109d565b005b34801561062057600080fd5b506106da6004803603602081101561063757600080fd5b810190808035906020019064010000000081111561065457600080fd5b82018360208201111561066657600080fd5b8035906020019184600183028401116401000000008311171561068857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111ee565b005b60095434146106ea57600080fd5b600581815481106106f757fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156107ba57600080fd5b505afa1580156107ce573d6000803e3d6000fd5b505050506040513d6101408110156107e557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506108948382611264565b505050565b606080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405190808252806020026020018201604052801561090a5781602001602082028038833980820191505090505b509050600080905060008090505b6005805490508110156109bb578473ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109ae578083838151811061099957fe5b60200260200101818152505081806001019250505b8080600101915050610918565b508192505050919050565b600581815481106109d357fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7f5780601f10610a5457610100808354040283529160200191610a7f565b820191906000526020600020905b815481529060010190602001808311610a6257829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b3c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610b82573d6000803e3d6000fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bdf57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160058281548110610c3457fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610c6757600080fd5b836006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cd357600080fd5b8360058681548110610ce157fe5b9060005260206000209060030201600101819055505050505050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002838160058281548110610d6657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610d9957600080fd5b846006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0557600080fd5b848460058881548110610e1457fe5b90600052602060002090600302016000019190610e329291906117da565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9457600080fd5b8060098190555050565b816006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0a57600080fd5b600060058481548110610f1957fe5b90600052602060002090600302019050600060058481548110610f3857fe5b906000526020600020906003020190506000610f546064611373565b9050600b54811161101d5782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050611018868360010154611264565b611095565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061109483611402565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110f657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561113057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461123a57600080fd5b60006112458261142c565b90506064818161125157fe5b068103905061126082826114ba565b5050565b816006600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112d057600080fd5b6000600584815481106112df57fe5b906000526020600020906003020190506112f881611797565b61130157600080fd5b600254838161130c57fe5b06925060006002848360010154018161132157fe5b0490506113636040518060400160405280600681526020017f4e6577446f670000000000000000000000000000000000000000000000000000815250826114ba565b61136c82611402565b5050505050565b6000600a60008154809291906001019190505550814233600a54604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816113fa57fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600080826040516020018082805190602001908083835b602083106114665780518252602082019150602081019050602083039250611443565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c905060025481816114b157fe5b06915050919050565b6114c261185a565b828160000181905250818160200181815250506001816040019063ffffffff16908163ffffffff16815250506003544201816060019063ffffffff16908163ffffffff16815250506000816080019061ffff16908161ffff168152505060008160a0019061ffff16908161ffff16815250506005819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061157c9291906118a4565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff16021790555050506000428360045401019050336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116cd6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117be90919063ffffffff16565b507f602d5f162a3ab956e72d52d29515db38e085449c051f4ba319f4ccff1569b1908185856040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561173e578082015181840152602081019050611723565b50505050905090810190601f16801561176b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a161179060016004546117be90919063ffffffff16565b5050505050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b6000808284019050838110156117d057fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061181b57803560ff1916838001178555611849565b82800160010185558215611849579182015b8281111561184857823582559160200191906001019061182d565b5b5090506118569190611924565b5090565b6040518060c001604052806060815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118e557805160ff1916838001178555611913565b82800160010185558215611913579182015b828111156119125782518255916020019190600101906118f7565b5b5090506119209190611924565b5090565b61194691905b8082111561194257600081600090555060010161192a565b5090565b9056fea264697066735822122093cd967bf094c69b839cf7ef9ecb6d807bcaf16b13af17251b0b3db0e46d246364736f6c63430006000033",
  "sourceMap": "94:733:1:-:0;;;327:2:2;307:22;;360:9;;356:2;:13;335:34;;398:6;375:29;;152:11:4;134:29;;148:1:1;131:18;;185:2;153:34;;353:10:7;345:5;;:18;;;;;;;;;;;;;;;;;;94:733:1;;;;;;",
  "deployedSourceMap": "94:733:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:116:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;362:116:4;;;;;;;;;;;;;;;;;:::i;:::-;;1291:179:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1291:179:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1291:179:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;885:329:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:329:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;885:329:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;885:329:4;;;;;;;;;;;;;;;;;597:17:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:17:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;597:17:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;597:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:107:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;482:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;482:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;601:121:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:121:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;601:121:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;746:135:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:135:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;746:135:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;621:45:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;621:45:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;621:45:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;91:20:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:20:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;593:149:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;593:149:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;593:149:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;593:149:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;593:149:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;593:149:4;;;;;;;;;;;;:::i;:::-;;277:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;277:81:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;277:81:4;;;;;;;;;;;;;;;;;:::i;:::-;;370:455:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;370:455:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;370:455:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;674:174:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:174:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;674:174:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;1554:243:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1554:243:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1554:243:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1554:243:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1554:243:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1554:243:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1554:243:2;;;;;;;;;;;;;;;:::i;:::-;;362:116:4;436:10;;423:9;:23;415:32;;;;;;453:4;458:6;453:12;;;;;;;;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:116;:::o;1291:179:3:-;1353:13;1394;;;;;;;;;;;:22;;;1417:8;1394:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1394:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1394:32:3;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1394:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:33;1448:6;1456:8;1432:15;:33::i;:::-;1291:179;;;:::o;885:329:4:-;947:13;968:20;1002:13;:21;1016:6;1002:21;;;;;;;;;;;;;;;;991:33;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;991:33:4;;;;968:56;;1030:12;1045:1;1030:16;;1057:6;1066:1;1057:10;;1052:139;1073:4;:11;;;;1069:1;:15;1052:139;;;1120:6;1103:23;;:10;:13;1114:1;1103:13;;;;;;;;;;;;;;;;;;;;;:23;;;1099:86;;;1156:1;1138:6;1145:7;1138:15;;;;;;;;;;;;;:19;;;;;1167:9;;;;;;;1099:86;1086:3;;;;;;;1052:139;;;;1203:6;1196:13;;;;885:329;;;:::o;597:17:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;482:107:4:-;496:5:7;;;;;;;;;;;482:19;;:10;:19;;;474:28;;;;;;546:2:4::1;:11;;:34;558:21;546:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;546:34:4;482:107:::0;:::o;601:121:3:-;496:5:7;;;;;;;;;;;482:19;;:10;:19;;;474:28;;;;;;708:8:3::1;677:13;;:40;;;;;;;;;;;;;;;;;;601:121:::0;:::o;746:135:4:-;812:2;816:6;250;228:4;233:6;228:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:28;;;;220:37;;;;;;836:6:::1;566:10:3;:18;577:6;566:18;;;;;;;;;;;;;;;;;;;;;552:32;;:10;:32;;;544:41;;;::::0;::::1;;869:7:4::2;850:4;855:6;850:12;;;;;;;;;;;;;;;;;;:16;;:26;;;;263:1:::1;746:135:::0;;;;:::o;621:45:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;91:20:7:-;;;;;;;;;;;;;:::o;593:149:4:-;672:1;675:6;250;228:4;233:6;228:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:28;;;;220:37;;;;;;695:6:::1;566:10:3;:18;577:6;566:18;;;;;;;;;;;;;;;;;;;;;552:32;;:10;:32;;;544:41;;;::::0;::::1;;729:8:4::2;;709:4;714:6;709:12;;;;;;;;;;;;;;;;;;:17;;:28;;;;;;;:::i;:::-;;263:1:::1;593:149:::0;;;;;:::o;277:81::-;496:5:7;;;;;;;;;;;482:19;;:10;:19;;;474:28;;;;;;349:4:4::1;336:10;:17;;;;277:81:::0;:::o;370:455:1:-;436:6;566:10:3;:18;577:6;566:18;;;;;;;;;;;;;;;;;;;;;552:32;;:10;:32;;;544:41;;;;;;450:17:1::1;470:4;475:6;470:12;;;;;;;;;;;;;;;;;;450:32;;488:20;511:4;516:9;511:15;;;;;;;;;;;;;;;;;;488:38;;532:9;544:12;552:3;544:7;:12::i;:::-;532:24;;574;;566:4;:32;562:259;;608:5;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;632:5;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:37;697:6;705:8;:12;;;681:15;:37::i;:::-;562:259;;;739:5;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:23;808:5;791:16;:23::i;:::-;562:259;591:1:3;;;370:455:1::0;;;:::o;674:174:7:-;496:5;;;;;;;;;;;482:19;;:10;:19;;;474:28;;;;;;770:1:::1;750:22;;:8;:22;;;;742:31;;;::::0;::::1;;812:8;784:37;;805:5;::::0;::::1;;;;;;;;;784:37;;;;;;;;;;;;835:8;827:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;674:174:::0;:::o;1554:243:2:-;1654:1;1625:13;:25;1639:10;1625:25;;;;;;;;;;;;;;;;:30;1617:39;;;;;;1666:15;1684:25;1703:5;1684:18;:25::i;:::-;1666:43;;1750:3;1740:7;:13;;;;;;1729:7;:25;1719:35;;1764:26;1775:5;1782:7;1764:10;:26::i;:::-;1554:243;;:::o;973:314:3:-;1050:6;566:10;:18;577:6;566:18;;;;;;;;;;;;;;;;;;;;;552:32;;:10;:32;;;544:41;;;;;;1064:17:::1;1084:4;1089:6;1084:12;;;;;;;;;;;;;;;;;;1064:32;;1110:15;1119:5;1110:8;:15::i;:::-;1102:24;;;::::0;::::1;;1158:10;;1145;:23;;;;;;1132:36;;1174:11;1215:1;1201:10;1189:5;:9;;;:22;1188:28;;;;;;1174:42;;1225:28;;;;;;;;;;;;;;;;;::::0;1246:6:::1;1225:10;:28::i;:::-;1259:23;1276:5;1259:16;:23::i;:::-;591:1;;973:314:::0;;;:::o;192:174:1:-;241:4;253:9;;:11;;;;;;;;;;;;;353:8;309:15;326:10;338:9;;292:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;292:56:1;;;282:67;;;;;;277:73;;:84;;;;;;270:91;;192:174;;;:::o;726:119:3:-;827:12;;809:15;:30;785:4;:14;;;:55;;;;;;;;;;;;;;;;;;726:119;:::o;1333:215:2:-;1427:7;1450:12;1500:4;1483:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1483:22:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1483:22:2;;;1473:33;;;;;;1465:42;;1450:57;;1531:10;;1524:4;:17;;;;;;1517:24;;;1333:215;;;:::o;717:610::-;891:14;;:::i;:::-;926:5;915:3;:8;;:16;;;;951:4;941:3;:7;;:14;;;;;977:1;965:3;:9;;:13;;;;;;;;;;;1029:12;;1011:15;:30;988:3;:13;;:54;;;;;;;;;;;1067:1;1052:3;:12;;:16;;;;;;;;;;;1094:1;1078:3;:13;;:17;;;;;;;;;;;1105:4;1115:3;1105:14;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1105:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:7;1156:15;1149:4;1139:7;;:14;:32;1129:42;;1205:10;1188;:14;1199:2;1188:14;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1225:32;1255:1;1225:13;:25;1239:10;1225:25;;;;;;;;;;;;;;;;:29;;:32;;;;:::i;:::-;;1272:24;1280:2;1284:5;1291:4;1272:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1272:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:14;1318:1;1306:7;;:11;;:14;;;;:::i;:::-;;717:610;;;;:::o;849:120:3:-;908:4;948:15;930:4;:14;;;;;;;;;;;;:33;;;;922:42;;849:120;;;:::o;1046:129:8:-;1104:7;1119:9;1135:1;1131;:5;1119:17;;1154:1;1149;:6;;1142:14;;;;1169:1;1162:8;;;1046:129;;;;:::o;94:733:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >0.5.19 <=0.7.0;\n\nimport \"./dogHelper.sol\";\n\ncontract DogeAttack is DogHelper {\n  uint randNonce = 0;\n  uint attackVictoryProbability = 70;\n\n  function randMod(uint _modulus) internal returns(uint) {\n    randNonce++;\n    return uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % _modulus;\n  }\n\n  function attack(uint _dogId, uint _targetId) external onlyOwnerOf(_dogId) {\n    Dog storage myDog = dogs[_dogId];\n    Dog storage enemyDog = dogs[_targetId];\n    uint rand = randMod(100);\n    if (rand <= attackVictoryProbability) {\n      myDog.winCount++;\n      myDog.level++;\n      enemyDog.lossCount++;\n      feedAndMultiply(_dogId, enemyDog.dna);\n    } else {\n      myDog.lossCount++;\n      enemyDog.winCount++;\n      _triggerCooldown(myDog);\n    }\n  }\n}\n",
  "sourcePath": "/home/julian/Desktop/BinanceCriptoDogs/contracts/dogAttack.sol",
  "ast": {
    "absolutePath": "/home/julian/Desktop/BinanceCriptoDogs/contracts/dogAttack.sol",
    "exportedSymbols": {
      "DogeAttack": [
        141
      ]
    },
    "id": 142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">",
          "0.5",
          ".19",
          "<=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "absolutePath": "/home/julian/Desktop/BinanceCriptoDogs/contracts/dogHelper.sol",
        "file": "./dogHelper.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 701,
        "src": "67:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 36,
              "name": "DogHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 700,
              "src": "117:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DogHelper_$700",
                "typeString": "contract DogHelper"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "117:9:1"
          }
        ],
        "contractDependencies": [
          356,
          524,
          700,
          971
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141,
          700,
          524,
          356,
          971
        ],
        "name": "DogeAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 40,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 141,
            "src": "131:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "131:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "148:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 141,
            "src": "153:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "153:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "185:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "247:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "253:11:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "253:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "253:11:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 58,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "309:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 59,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "309:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 60,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "326:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 61,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "326:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 62,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "338:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 56,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "292:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "292:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "292:56:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 55,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "282:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "282:67:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "277:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "277:73:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "353:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "277:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49,
                  "id": 68,
                  "nodeType": "Return",
                  "src": "270:91:1"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "209:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:15:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "241:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "240:6:1"
            },
            "scope": 141,
            "src": "192:174:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "444:381:1",
              "statements": [
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "name": "myDog",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "450:17:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                        "typeString": "struct DogFactory.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 80,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 190,
                        "src": "450:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                          "typeString": "struct DogFactory.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "dogs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "470:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$190_storage_$dyn_storage",
                        "typeString": "struct DogFactory.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 84,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "_dogId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "475:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "470:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$190_storage",
                      "typeString": "struct DogFactory.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "450:32:1"
                },
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "enemyDog",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "488:20:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                        "typeString": "struct DogFactory.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 86,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 190,
                        "src": "488:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                          "typeString": "struct DogFactory.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 91,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "dogs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "511:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$190_storage_$dyn_storage",
                        "typeString": "struct DogFactory.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 90,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "516:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "511:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$190_storage",
                      "typeString": "struct DogFactory.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "488:38:1"
                },
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "532:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 94,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "544:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:24:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "566:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "574:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "566:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "731:90:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "739:17:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 123,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "739:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 189,
                            "src": "739:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "739:17:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "764:19:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "enemyDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "764:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 187,
                            "src": "764:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "764:19:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 134,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "808:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            ],
                            "id": 133,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "791:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Dog_$190_storage_ptr_$returns$__$",
                              "typeString": "function (struct DogFactory.Dog storage pointer)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "791:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "791:23:1"
                      }
                    ]
                  },
                  "id": 138,
                  "nodeType": "IfStatement",
                  "src": "562:259:1",
                  "trueBody": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "600:125:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "608:16:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "608:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 187,
                            "src": "608:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "608:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "632:13:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "632:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "632:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "632:13:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "653:20:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "enemyDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "653:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 189,
                            "src": "653:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "653:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "_dogId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "697:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 118,
                                "name": "enemyDog",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87,
                                "src": "705:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                  "typeString": "struct DogFactory.Dog storage pointer"
                                }
                              },
                              "id": 119,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 181,
                              "src": "705:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 116,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "681:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "681:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "681:37:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e1fa7638",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_dogId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "436:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 78,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 404,
                  "src": "424:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "424:19:1"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_dogId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "386:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "399:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:29:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:1"
            },
            "scope": 141,
            "src": "370:455:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 142,
        "src": "94:733:1"
      }
    ],
    "src": "33:795:1"
  },
  "legacyAST": {
    "absolutePath": "/home/julian/Desktop/BinanceCriptoDogs/contracts/dogAttack.sol",
    "exportedSymbols": {
      "DogeAttack": [
        141
      ]
    },
    "id": 142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">",
          "0.5",
          ".19",
          "<=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "absolutePath": "/home/julian/Desktop/BinanceCriptoDogs/contracts/dogHelper.sol",
        "file": "./dogHelper.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 142,
        "sourceUnit": 701,
        "src": "67:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 36,
              "name": "DogHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 700,
              "src": "117:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DogHelper_$700",
                "typeString": "contract DogHelper"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "117:9:1"
          }
        ],
        "contractDependencies": [
          356,
          524,
          700,
          971
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 141,
        "linearizedBaseContracts": [
          141,
          700,
          524,
          356,
          971
        ],
        "name": "DogeAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 40,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 141,
            "src": "131:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "131:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "148:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 141,
            "src": "153:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "153:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "185:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "247:119:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "253:11:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "253:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "253:11:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 58,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "309:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 59,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "309:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 60,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "326:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 61,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "326:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 62,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "338:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 56,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "292:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "292:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "292:56:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 55,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "282:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "282:67:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "277:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "277:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "277:73:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "353:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "277:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49,
                  "id": 68,
                  "nodeType": "Return",
                  "src": "270:91:1"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "209:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:15:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 70,
                  "src": "241:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "240:6:1"
            },
            "scope": 141,
            "src": "192:174:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "444:381:1",
              "statements": [
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "name": "myDog",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "450:17:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                        "typeString": "struct DogFactory.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 80,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 190,
                        "src": "450:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                          "typeString": "struct DogFactory.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "dogs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "470:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$190_storage_$dyn_storage",
                        "typeString": "struct DogFactory.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 84,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "_dogId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "475:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "470:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$190_storage",
                      "typeString": "struct DogFactory.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "450:32:1"
                },
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "name": "enemyDog",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "488:20:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                        "typeString": "struct DogFactory.Dog"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 86,
                        "name": "Dog",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 190,
                        "src": "488:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                          "typeString": "struct DogFactory.Dog"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 91,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "dogs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "511:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dog_$190_storage_$dyn_storage",
                        "typeString": "struct DogFactory.Dog storage ref[] storage ref"
                      }
                    },
                    "id": 90,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "516:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "511:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dog_$190_storage",
                      "typeString": "struct DogFactory.Dog storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "488:38:1"
                },
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 139,
                      "src": "532:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "532:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "552:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 94,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "544:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "532:24:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "566:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "574:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "566:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "731:90:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "739:17:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 123,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "739:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 189,
                            "src": "739:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "739:17:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "764:19:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 128,
                              "name": "enemyDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "764:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 187,
                            "src": "764:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "764:19:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 134,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "808:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            ],
                            "id": 133,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "791:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Dog_$190_storage_ptr_$returns$__$",
                              "typeString": "function (struct DogFactory.Dog storage pointer)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "791:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "791:23:1"
                      }
                    ]
                  },
                  "id": 138,
                  "nodeType": "IfStatement",
                  "src": "562:259:1",
                  "trueBody": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "600:125:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "608:16:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "608:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 187,
                            "src": "608:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 105,
                        "nodeType": "ExpressionStatement",
                        "src": "608:16:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "632:13:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 106,
                              "name": "myDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "632:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "632:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "632:13:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "653:20:1",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "enemyDog",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "653:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                "typeString": "struct DogFactory.Dog storage pointer"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 189,
                            "src": "653:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 115,
                        "nodeType": "ExpressionStatement",
                        "src": "653:20:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "_dogId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "697:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 118,
                                "name": "enemyDog",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87,
                                "src": "705:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dog_$190_storage_ptr",
                                  "typeString": "struct DogFactory.Dog storage pointer"
                                }
                              },
                              "id": 119,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 181,
                              "src": "705:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 116,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 499,
                            "src": "681:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "681:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "681:37:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e1fa7638",
            "id": 140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_dogId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "436:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 78,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 404,
                  "src": "424:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "424:19:1"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "_dogId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "386:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 140,
                  "src": "399:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:29:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:0:1"
            },
            "scope": 141,
            "src": "370:455:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 142,
        "src": "94:733:1"
      }
    ],
    "src": "33:795:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2021-02-02T06:04:48.777Z",
  "devdoc": {
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}